<?xml version="1.0" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="class-gstplugin">
    <refnamediv>
        <refname>gst.Plugin</refname>
        <refpurpose>Container for features loaded from a shared object module</refpurpose>
    </refnamediv>

<!-- *************************** -->
<!-- BEGIN OF MyClass' SYNOPSIS -->
<!-- *************************** -->

<refsect1>
    <title>Synopsis</title>

    <classsynopsis language="python">
        <ooclass><classname>gst.MyClass</classname></ooclass>
        <ooclass><classname><link linkend="class-gstobject">gst.Object</link></classname></ooclass>

    <constructorsynopsis language="python">
        <methodname><link linkend="constructor-gstplugin">gst.Plugin</link></methodname>
        <methodparam></methodparam>
    </constructorsynopsis>
    
    <methodsynopsis language="python">
        <methodname><link linkend="method-gstplugin--get_description">get_description</link></methodname>
    </methodsynopsis>
  
    <methodsynopsis language="python">
        <methodname><link linkend="method-gstplugin--get_filename">get_filename</link></methodname>
    </methodsynopsis>
    
    <methodsynopsis language="python">
        <methodname><link linkend="method-gstplugin--get_name">get_name</link></methodname>
    </methodsynopsis>
    
</classsynopsis>

<programlisting>
<emphasis role="bold">Functions</emphasis>
    
<methodsynopsis language="python"><methodname><link linkend="function-gstplugin--plugin_load_by_name">gst.plugin_load_by_name</link></methodname>
<methodparam><parameter role="keyword">name</parameter></methodparam></methodsynopsis><methodsynopsis language="python">
<methodname><link linkend="function-gstplugin--plugin_load_file">gst.plugin_load_file</link></methodname>
<methodparam><parameter role="keyword">filename</parameter></methodparam>
<methodparam><parameter role="keyword">error</parameter></methodparam>
</methodsynopsis>

</programlisting>

</refsect1>

 
<!-- ************************** -->
<!-- BEGIN OF MyClass' ANCESTRY -->
<!-- ************************** -->

<refsect1>
    <title>Ancestry</title>

<synopsis><ulink url="http://www.pygtk.org/pygtk2reference/class-gobject.html">gobject.GObject</ulink>
    +-- <link linkend="class-gstobject">gst.Object</link>
        +-- <link linkend="class-gstplugin">gst.Plugin</link>
</synopsis>
</refsect1>


<!-- ***************************** -->
<!-- BEGIN OF MyClass' DESCRIPTION -->
<!-- ***************************** -->

<refsect1 id="description-gstplugin">
    <title>Description</title>

    <para>
        GStreamer is extensible, so gst.Element instances can be loaded at runtime. A plugin system can 
        provide one or more of the basic GStreamer gst.PluginFeature subclasses.
    </para>
    <para>
       A plugin should export a symbol plugin_desc that is a struct of type gst.PluginDesc. 
       The plugin loader will check the version of the core library the plugin was linked against 
       and will create a new GstPlugin. It will then call the gst.PluginInitFunc function that was provided 
       in the plugin_desc.
    </para>
    <para>
        Once you have a handle to a gst.Plugin (e.g. from the gst.RegistryPool), you can add any object 
        that subclasses GstPluginFeature.
    </para>
    <para>
        Use gst_plugin_find_feature() and gst_plugin_get_feature_list() to find features in a plugin.
    </para>
    <para>
        Usually plugins are always automaticlly loaded so you don't need to call gst_plugin_load() 
        explicitly to bring it into memory. There are options to statically link plugins to an app or
        even use GStreamer without a plugin repository in which case gst_plugin_load() can be needed
        to bring the plugin into memory.
    </para>
</refsect1>


<!-- ******************************** -->
<!-- BEGIN OF MyClass' CONSTRUCTOR -->
<!-- ******************************** -->

<refsect1 id="constructor-gstplugin">
    <title>Constructor</title>
    
    <programlisting><constructorsynopsis language="python">
            <methodname>gst.Plugin</methodname>
            <methodparam><parameter role="keyword">name</parameter><initializer>None</initializer></methodparam>
        </constructorsynopsis></programlisting>
    
    <variablelist>
        <varlistentry>
            <term><parameter role="keyword">name</parameter>&nbsp;:</term>
            <listitem><simpara> The name for the plugin.</simpara></listitem>
        </varlistentry>
    </variablelist>
    
    <para>
        Creates a new plugin with the given name.
    </para>
</refsect1>


<!-- ************************* -->
<!-- BEGIN OF MyClass' METHODS -->
<!-- ************************* -->

<refsect1>
    <title>Methods</title>

    <refsect2 id="method-gstplugin--get_description">
        <title>gst.Plugin.get_description</title>
        <programlisting><methodsynopsis language="python">
            <methodname>get_description</methodname>
            <methodparam></methodparam>
        </methodsynopsis></programlisting>
    
        <variablelist>
            <varlistentry>
                <term><emphasis>Returns</emphasis>&nbsp;:</term>
                <listitem><simpara> the long name of the plugin.</simpara></listitem>
            </varlistentry>
        </variablelist>
      
        <para>
            The <methodname>get_description</methodname>() method gets the long descriptive name of the plugin.
        </para>
    </refsect2>

    <refsect2 id="method-gstplugin--get_filename">
        <title>gst.Plugin.get_filename</title>
        <programlisting><methodsynopsis language="python">
            <methodname>get_filename</methodname>
        </methodsynopsis></programlisting>
      
        <variablelist>
             <varlistentry>
                <term><emphasis>Returns</emphasis>&nbsp;:</term>
                <listitem><simpara> the filename of the plugin.</simpara></listitem>
            </varlistentry>
        </variablelist>

        <para>
            The <methodname>get_filename</methodname>() method gets the filename of the plugin.
        </para>
    </refsect2>
    
    <refsect2 id="method-gstplugin--get_name">
        <title>gst.Plugin.get_name</title>
        <programlisting><methodsynopsis language="python">
            <methodname>get_name</methodname>
        </methodsynopsis></programlisting>
      
        <variablelist>
            <varlistentry>
                <term><emphasis>Returns</emphasis>&nbsp;:</term>
                <listitem><simpara> the name of the plugin.</simpara></listitem>
            </varlistentry>
        </variablelist>

        <para>
            The <methodname>get_name</methodname>() method gets the short name of the plugin.
        </para>
    </refsect2>
  
</refsect1>

<!-- ************************** -->
<!-- BEGIN OF MyClass' FUNCTIONS -->
<!-- ************************** --> 
  
<refsect1>
        <title>Functions</title>
      
        <refsect2 id="function-gstplugin--plugin_load_by_name">
            <title>gst.plugin_load_by_name</title>
            <programlisting><methodsynopsis language="python">
                <methodname>plugin_load_by_name</methodname>
                <methodparam><parameter role="keyword">name</parameter></methodparam>
            </methodsynopsis></programlisting>
          
            <variablelist>
                <varlistentry>
                    <term><parameter role="keyword">name</parameter>&nbsp;:</term>
                    <listitem><simpara> The name of the plugin to load.</simpara></listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis>Returns</emphasis>&nbsp;:</term>
                    <listitem><simpara> The new plugin or None.</simpara></listitem>
                </varlistentry>
            </variablelist>
          
            <para>
                The <methodname>plugin_load_by_name</methodname>() function loads the named plugin. Refs the plugin.
            </para>
        </refsect2>
        
         <refsect2 id="function-gstplugin--plugin_load_file">
            <title>gst.plugin_load_file</title>
            <programlisting><methodsynopsis language="python">
                <methodname>plugin_load_file</methodname>
                <methodparam><parameter role="keyword">filename</parameter></methodparam>
                <methodparam><parameter role="keyword">error</parameter></methodparam>
            </methodsynopsis></programlisting>
          
            <variablelist>
                <varlistentry>
                    <term><parameter role="keyword">filename</parameter>&nbsp;:</term>
                    <listitem><simpara> the plugin filename to load</simpara></listitem>
                </varlistentry>
                <varlistentry>
                    <term><parameter role="keyword">error</parameter>&nbsp;:</term>
                    <listitem><simpara> a NULL-valued GError</simpara></listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis>Returns</emphasis>&nbsp;:</term>
                    <listitem><simpara> A reference to the existing loaded gst.Plugin, a reference to the newly-loaded gst.Plugin, 
                    or None if an error occurred..</simpara></listitem>
                </varlistentry>
            </variablelist>
          
            <para>
                The <methodname>plugin_load_file</methodname>() function loads the given plugin and refs it. Caller needs to unref after use.
            </para>
        </refsect2>
        
        
</refsect1>
    
 
</refentry>



