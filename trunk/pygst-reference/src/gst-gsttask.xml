<?xml version="1.0" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">


<refentry id="class-gsttask">
    <refnamediv>
        <refname>gst.Task</refname>
        <refpurpose>Describe your class here.</refpurpose>
    </refnamediv>


<!-- *************************** -->
<!-- BEGIN OF MyClass' SYNOPSIS -->
<!-- *************************** -->

<refsect1>
    <title>Synopsis</title>

    <classsynopsis language="python">
        <ooclass><classname>gst.MyClass</classname></ooclass>
        <ooclass><classname><link linkend="class-gstobject">gst.Object</link></classname></ooclass>

    <constructorsynopsis language="python">
        <methodname><link linkend="constructor-gsttask">gst.Task</link></methodname>
        <methodparam></methodparam>
    </constructorsynopsis>
    
    <methodsynopsis language="python">
        <methodname><link linkend="method-gsttask--join">join</link></methodname>
        <methodparam></methodparam>
    </methodsynopsis>
  
    <methodsynopsis language="python">
        <methodname><link linkend="method-gsttask--pause">pause</link></methodname>
        <methodparam><parameter role="keyword">format</parameter></methodparam>
        <methodparam><parameter role="keyword">minsize</parameter></methodparam>
        <methodparam><parameter role="keyword">maxsize</parameter></methodparam>
        <methodparam><parameter role="keyword">async</parameter></methodparam>
    </methodsynopsis>
</classsynopsis>


</refsect1>


<!-- *************************** -->
<!-- BEGIN OF MyClass' Properties -->
<!-- *************************** -->

<refsect1>
    <title>Properties</title>
    <blockquote role="properties">
        <informaltable pgwide="1" frame="none">
            <tgroup cols="3">
                <tbody>
                    <row valign="top">
                        <entry><methodname>value_name</methodname></entry>
                        <entry>Read</entry>
                        <entry>The name of the type of the format, eg GST_FORMAT_TIME.</entry>
                    </row>
                    <row valign="top">
                        <entry><methodname>value_nick</methodname></entry>
                        <entry>Read/Write</entry>
                        <entry>The nick of the type of the format, eg time.</entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </blockquote>
</refsect1>

<!-- *************************** -->
<!-- BEGIN OF MyClass' Attributes -->
<!-- *************************** -->

<refsect1>
    <title>Attributes</title>
    <blockquote role="properties">
        <informaltable pgwide="1" frame="none">
            <tgroup cols="3">
                <tbody>
                    <row valign="top">
                        <entry><methodname>value_name</methodname></entry>
                        <entry>Read</entry>
                        <entry>The name of the type of the format, eg GST_FORMAT_TIME.</entry>
                    </row>
                    <row valign="top">
                        <entry><methodname>value_nick</methodname></entry>
                        <entry>Read/Write</entry>
                        <entry>The nick of the type of the format, eg time.</entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </blockquote>
</refsect1>

 
<!-- ************************** -->
<!-- BEGIN OF MyClass' ANCESTRY -->
<!-- ************************** -->

<refsect1>
    <title>Ancestry</title>

<synopsis>+-- <link linkend="class-gstobject">gst.Object</link>
    +-- <link linkend="class-gstevent">gst.Event</link>
</synopsis>
</refsect1>


<!-- ********************************* -->
<!-- BEGIN OF MyClass' SIGNAL PROTOTYPES -->
<!-- ********************************* -->

<refsect1>
    <title>Signal Prototypes</title>
    <variablelist>
        <varlistentry>
            <term><link linkend="signal-gstbin--element-added">"element-added"</link></term>
            <listitem>
                <methodsynopsis language="python"><methodname>callback</methodname>
                    <methodparam><parameter>gstbin</parameter></methodparam>
                    <methodparam><parameter>element</parameter></methodparam>
                    <methodparam><parameter>user_data</parameter></methodparam>
                    <methodparam><parameter>...</parameter></methodparam>
                </methodsynopsis>
            </listitem>
        </varlistentry>
        
        <varlistentry>
            <term><link linkend="signal-gstbin--element-removed">"element-removed"</link></term>
            <listitem>
                <methodsynopsis language="python"><methodname>callback</methodname>
                    <methodparam><parameter>gstbin</parameter></methodparam>
                    <methodparam><parameter>element</parameter></methodparam>
                    <methodparam><parameter>user_data</parameter></methodparam>
                    <methodparam><parameter>...</parameter></methodparam>
                </methodsynopsis>
            </listitem>
        </varlistentry>
    </variablelist>
</refsect1>


<!-- ***************************** -->
<!-- BEGIN OF MyClass' DESCRIPTION -->
<!-- ***************************** -->

<refsect1 id="description-gstevent">
    <title>Description</title>

    <para>
        The event classes are used to construct and query events.
    </para>
    <para>
        Events are usually created with gst.event_new_*() which takes the extra event parameters as arguments. 
        Events can be parsed with their respective gst.Event.parse_*() methods.
    </para>
</refsect1>


<!-- ******************************** -->
<!-- BEGIN OF MyClass' CONSTRUCTOR -->
<!-- ******************************** -->

<refsect1 id="constructor-gsttask">
    <title>Constructor</title>
    
    <programlisting><constructorsynopsis language="python">
            <methodname>gst.Task</methodname>
            <methodparam><parameter role="keyword">name</parameter><initializer>None</initializer></methodparam>
        </constructorsynopsis></programlisting>
    
    <variablelist>
        <varlistentry>
            <term><parameter role="keyword">name</parameter>&nbsp;:</term>
            <listitem><simpara> The name for the pipeline.</simpara></listitem>
        </varlistentry>
    </variablelist>
    
    <para>
        Creates a new pipeline with the given name.
    </para>
</refsect1>


<!-- ************************* -->
<!-- BEGIN OF MyClass' METHODS -->
<!-- ************************* -->

<refsect1>
    <title>Methods</title>

    <refsect2 id="method-gsttask--join">
        <title>gst.Task.join</title>
        <programlisting><methodsynopsis language="python">
            <methodname>join</methodname>
            <methodparam><parameter role="keyword">format</parameter></methodparam>
            <methodparam><parameter role="keyword">minsize</parameter></methodparam>
            <methodparam><parameter role="keyword">maxsize</parameter></methodparam>
            <methodparam><parameter role="keyword">async</parameter></methodparam>
        </methodsynopsis></programlisting>
      
        <variablelist>
            <varlistentry>
                <term><parameter role="keyword">format</parameter>&nbsp;:</term>
                <listitem><simpara> The format.</simpara></listitem>
            </varlistentry>
            <varlistentry>
                <term><parameter role="keyword">minsize</parameter>&nbsp;:</term>
                <listitem><simpara> The minsize.</simpara></listitem>
            </varlistentry>
            <varlistentry>
                <term><parameter role="keyword">maxsize</parameter>&nbsp;:</term>
                <listitem><simpara> The maxsize.</simpara></listitem>
            </varlistentry>
            <varlistentry>
                <term><parameter role="keyword">async</parameter>&nbsp;:</term>
                <listitem><simpara> The async flag.</simpara></listitem>
            </varlistentry>
        </variablelist>

        <para>
            The <methodname>parse_buffer_size</methodname>() method gets the format, minsize, maxsize and async-flag in the buffersize event.
        </para>
    </refsect2>
    
    <refsect2 id="method-gsttask--pause">
        <title>gst.Task.pause</title>
        <programlisting><methodsynopsis language="python">
            <methodname>pause</methodname>
            <methodparam><parameter role="keyword">format</parameter></methodparam>
            <methodparam><parameter role="keyword">minsize</parameter></methodparam>
            <methodparam><parameter role="keyword">maxsize</parameter></methodparam>
            <methodparam><parameter role="keyword">async</parameter></methodparam>
        </methodsynopsis></programlisting>
      
        <variablelist>
            <varlistentry>
                <term><parameter role="keyword">format</parameter>&nbsp;:</term>
                <listitem><simpara> The format.</simpara></listitem>
            </varlistentry>
            <varlistentry>
                <term><parameter role="keyword">minsize</parameter>&nbsp;:</term>
                <listitem><simpara> The minsize.</simpara></listitem>
            </varlistentry>
            <varlistentry>
                <term><parameter role="keyword">maxsize</parameter>&nbsp;:</term>
                <listitem><simpara> The maxsize.</simpara></listitem>
            </varlistentry>
            <varlistentry>
                <term><parameter role="keyword">async</parameter>&nbsp;:</term>
                <listitem><simpara> The async flag.</simpara></listitem>
            </varlistentry>
        </variablelist>

        <para>
            The <methodname>parse_buffer_size</methodname>() method gets the format, minsize, maxsize and async-flag in the buffersize event.
        </para>
    </refsect2>
 
 
</refsect1>
    
 
</refentry>



